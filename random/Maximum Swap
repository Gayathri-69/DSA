class Solution:
    def maximumSwap(self, num: int) -> int:
        list_num = [x for x in str(num)]
        p1, p2 = 0, 0
        max_digit = len(list_num) - 1

        for i in range(len(list_num) - 1, -1, -1):
            if list_num[i] > list_num[max_digit]:
                max_digit = i
            elif list_num[i] < list_num[max_digit]:
                p1, p2 = i, max_digit

        # Swap the maximum digits
        list_num[p1], list_num[p2] = list_num[p2], list_num[p1]

        # Convert the list of characters back to an integer
        result = int(''.join(list_num))
        return result


#OR

class Solution:
    def maximumSwap(self, num: int) -> int:
        nums=[int(x) for x in str(num)]
        last_index={val:i for i ,val in enumerate(nums)}
        for i in range(len(nums)):
            for d in range(9,nums[i],-1):
                if d in last_index and last_index[d]>i:
                    nums[i],nums[last_index[d]]=nums[last_index[d]],nums[i]
                    return int(''.join(map(str,nums)))
        return num

        
        
